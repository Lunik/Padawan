import yaml
import logging
import os.path
from shutil import copyfile

from dnslib import NS, SOA, TXT

from .record import Record

RECORD_TYPE = {
    'NS': NS,
    'SOA': SOA,
    'TXT': TXT
}

DEBUG_LEVEL = {
    'info': logging.INFO,
    'debug': logging.DEBUG,
    'warning': logging.WARNING,
    'error': logging.ERROR,
    'critical': logging.CRITICAL
}

CONFIG_DIR = "/etc/padawanv6"
CONFIG_FILE = CONFIG_DIR + "/config.yml"

class Config:
    def __init__(self, config_file=CONFIG_FILE):
        if not os.path.exists(CONFIG_FILE):
            copyfile(CONFIG_FILE + ".dist", CONFIG_FILE)

        with open(config_file, 'r') as ymlfile:
            cfg = yaml.load(ymlfile)

        self.DIGIT_TAG = "%DIGITS%"
        self.record_pattern = cfg['record_pattern']
        self.ipv6_subnet = cfg['ipv6_subnet']
        self.records = {
            'ok': [
                Record(TXT, 'Generated by PadawanV6')
            ],
            'ko': [
                Record(TXT, 'PadawanV6 respond only to IPv6 PTR request'),
                Record(TXT, 'PadawanV6 respond only to \'' + self.ipv6_subnet + '\' zone')
            ] + [Record(RECORD_TYPE[record['type']], record['value']) for record in cfg['records']]
        }

        self.server = cfg['server']

        logging.basicConfig(
                format='%(asctime)s [%(name)s] %(levelname)s - %(message)s',
                filename=cfg['logs']['filename'],
                level=DEBUG_LEVEL[cfg['logs']['debug_level']])
